Sentence,WUGgedSentence,Score,LenFacScore,CleanedParse,GoodBad,Filename,pair_id,field,linguistics_term,Grammar,good_score,bad_score,correct_pair
Name went fishing Name .,Name went fishing Name .,-27.6907315056565,-5.538146301131301,(ROOT (NP _Name) (VP (VBD _went) (VP (VBG _fishing) (NP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.754861301927902,-5.538146301131301,TRUE
Name sits down Name .,Name sits down Name .,-23.774306509639512,-4.754861301927902,(ROOT (NP _Name) (VP (VBZ _sits) (PRT _down) (NP _Name)) (. _.)),good,causative,116,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.754861301927902,-5.538146301131301,TRUE
Name went fishing Name .,Name went fishing Name .,-27.189777362321713,-5.437955472464343,(ROOT (NP _Name) (VP (VBD _went) (NP (NN _fishing) (NNP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.072596587542383,-5.437955472464343,TRUE
Name sits down Name .,Name sits down Name .,-25.362982937711912,-5.072596587542383,(ROOT (NP _Name) (VP (VBZ _sits) (PRT _down) (NP _Name)) (. _.)),good,causative,116,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.072596587542383,-5.437955472464343,TRUE
Name went fishing Name .,Name went fishing Name .,-27.403253412910434,-5.480650682582087,(ROOT (NP _Name) (VP (VBD _went) (NP (NN _fishing) (NNP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.926114149903212,-5.480650682582087,TRUE
Name sits down Name .,Name sits down Name .,-24.63057074951606,-4.926114149903212,(ROOT (NP _Name) (VP (VBZ _sits) (PP (IN _down) (NP _Name))) (. _.)),good,causative,116,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.926114149903212,-5.480650682582087,TRUE
Name went fishing Name .,Name went fishing Name .,-27.763579968255353,-5.552715993651071,(ROOT (NP _Name) (VP (VBD _went) (NP (NN _fishing) (NNP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.049779144896752,-5.552715993651071,TRUE
Name sits down Name .,Name sits down Name .,-25.24889572448376,-5.049779144896752,(ROOT (NP _Name) (VP (VBZ _sits) (PRT _down) (NP _Name)) (. _.)),good,causative,116,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.049779144896752,-5.552715993651071,TRUE
Name went fishing Name .,Name went fishing Name .,-28.175783612995428,-5.635156722599086,(ROOT (NP _Name) (VP (VBD _went) (VP (VBG _fishing) (NP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.893245764950042,-5.635156722599086,TRUE
Name sits down Name .,Name sits down Name .,-24.46622882475021,-4.893245764950042,(ROOT (NP _Name) (VP (VBZ _sits) (PP (IN _down) (NP _Name))) (. _.)),good,causative,116,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.893245764950042,-5.635156722599086,TRUE
Name went fishing Name .,Name went fishing Name .,-27.923469104329047,-5.58469382086581,(ROOT (NP _Name) (VP (VBD _went) (VP (VBG _fishing) (NP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.814795448437616,-5.58469382086581,TRUE
Name sits down Name .,Name sits down Name .,-24.073977242188082,-4.814795448437616,(ROOT (NP _Name) (VP (VBZ _sits) (PRT _down) (NP _Name)) (. _.)),good,causative,116,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.814795448437616,-5.58469382086581,TRUE
Name went fishing Name .,Name went fishing Name .,-27.590019364933852,-5.51800387298677,(ROOT (NP _Name) (VP (VBD _went) (VP (VBG _fishing) (NP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.099708192439168,-5.51800387298677,TRUE
Name sits down Name .,Name sits down Name .,-25.49854096219584,-5.099708192439168,(ROOT (NP _Name) (VP (VBZ _sits) (PP (IN _down) (NP _Name))) (. _.)),good,causative,116,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.099708192439168,-5.51800387298677,TRUE
Name went fishing Name .,Name went fishing Name .,-28.50365402351111,-5.700730804702222,(ROOT (NP _Name) (VP (VBD _went) (NP (NN _fishing) (NNP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.8331789985856215,-5.700730804702222,TRUE
Name sits down Name .,Name sits down Name .,-24.16589499292811,-4.8331789985856215,(ROOT (NP _Name) (VP (VBZ _sits) (PRT _down) (NP _Name)) (. _.)),good,causative,116,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.8331789985856215,-5.700730804702222,TRUE
Name went fishing Name .,Name went fishing Name .,-28.279604975863812,-5.655920995172762,(ROOT (NP _Name) (VP (VBD _went) (NP (NN _fishing) (NNP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.82451284238742,-5.655920995172762,TRUE
Name sits down Name .,Name sits down Name .,-24.1225642119371,-4.82451284238742,(ROOT (NP _Name) (VP (VBZ _sits) (PRT _down) (NP _Name)) (. _.)),good,causative,116,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.82451284238742,-5.655920995172762,TRUE
Name went fishing Name .,Name went fishing Name .,-27.699230371697315,-5.539846074339463,(ROOT (NP _Name) (VP (VBD _went) (VP (VBG _fishing) (NP _Name))) (. _.)),bad,causative,116,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.893031076658785,-5.539846074339463,TRUE
Name sits down Name .,Name sits down Name .,-24.465155383293922,-4.893031076658785,(ROOT (NP _Name) (VP (VBZ _sits) (PRT _down) (NP _Name)) (. _.)),good,causative,116,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.893031076658785,-5.539846074339463,TRUE
Name rolled the cars .,Name rolled the cars .,-24.9117158929385,-4.9823431785877,(ROOT (NP _Name) (VP (VBD _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.9823431785877,-4.475300331577485,FALSE
Name fell the cars .,Name fell the cars .,-22.376501657887427,-4.475300331577485,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.9823431785877,-4.475300331577485,FALSE
Name rolled the cars .,Name rolled the cars .,-25.945683869374786,-5.189136773874957,(ROOT (NP _Name) (VP (VBD _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.189136773874957,-4.571672503074958,FALSE
Name fell the cars .,Name fell the cars .,-22.85836251537479,-4.571672503074958,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.189136773874957,-4.571672503074958,FALSE
Name rolled the cars .,Name rolled the cars .,-25.79295630090587,-5.158591260181174,(ROOT (NP _Name) (VP (VBD _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.158591260181174,-4.565207173199175,FALSE
Name fell the cars .,Name fell the cars .,-22.826035865995873,-4.565207173199175,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.158591260181174,-4.565207173199175,FALSE
Name rolled the cars .,Name rolled the cars .,-25.283131757390404,-5.056626351478081,(ROOT (NP _Name) (VP (VBD _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.056626351478081,-4.56522274490036,FALSE
Name fell the cars .,Name fell the cars .,-22.826113724501802,-4.56522274490036,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.056626351478081,-4.56522274490036,FALSE
Name rolled the cars .,Name rolled the cars .,-26.336870657670183,-5.267374131534036,(ROOT (NP _Name) (VP (VBD _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.267374131534036,-4.588577268096037,FALSE
Name fell the cars .,Name fell the cars .,-22.942886340480182,-4.588577268096037,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.267374131534036,-4.588577268096037,FALSE
Name rolled the cars .,Name rolled the cars .,-25.43187210900683,-5.086374421801366,(ROOT (NP _Name) (VP (VBN _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.086374421801366,-4.518669076076323,FALSE
Name fell the cars .,Name fell the cars .,-22.593345380381617,-4.518669076076323,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.086374421801366,-4.518669076076323,FALSE
Name rolled the cars .,Name rolled the cars .,-25.460860782027023,-5.092172156405405,(ROOT (NP _Name) (VP (VBN _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.092172156405405,-4.543496194473539,FALSE
Name fell the cars .,Name fell the cars .,-22.717480972367696,-4.543496194473539,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.092172156405405,-4.543496194473539,FALSE
Name rolled the cars .,Name rolled the cars .,-25.646587803331876,-5.129317560666375,(ROOT (NP _Name) (VP (VBN _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.129317560666375,-4.594933521247343,FALSE
Name fell the cars .,Name fell the cars .,-22.974667606236718,-4.594933521247343,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.129317560666375,-4.594933521247343,FALSE
Name rolled the cars .,Name rolled the cars .,-25.712322555747573,-5.142464511149514,(ROOT (NP _Name) (VP (VBD _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.142464511149514,-4.534282828871515,FALSE
Name fell the cars .,Name fell the cars .,-22.671414144357573,-4.534282828871515,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.142464511149514,-4.534282828871515,FALSE
Name rolled the cars .,Name rolled the cars .,-26.00815059907572,-5.201630119815144,(ROOT (NP _Name) (VP (VBN _rolled) (NP (DT _the) (NNS _cars))) (. _.)),good,causative,121,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.201630119815144,-4.528790380082042,FALSE
Name fell the cars .,Name fell the cars .,-22.64395190041021,-4.528790380082042,(ROOT (NP _Name) (VP (VBD _fell) (NP (DT _the) (NNS _cars))) (. _.)),bad,causative,121,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.201630119815144,-4.528790380082042,FALSE
Name would n't waste away every box .,Name would n't waste away every box .,-45.181642831908015,-5.647705353988502,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.936899276427573,-5.647705353988502,TRUE
Name would n't open every box .,Name would n't open every box .,-34.55829493499301,-4.936899276427573,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.936899276427573,-5.647705353988502,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-45.17601462993824,-5.64700182874228,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.935766262457755,-5.64700182874228,TRUE
Name would n't open every box .,Name would n't open every box .,-34.55036383720429,-4.935766262457755,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.935766262457755,-5.64700182874228,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-45.43402992446273,-5.679253740557841,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.879616628473032,-5.679253740557841,TRUE
Name would n't open every box .,Name would n't open every box .,-34.15731639931123,-4.879616628473032,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.879616628473032,-5.679253740557841,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-45.15299402958939,-5.644124253698673,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.883035760135576,-5.644124253698673,TRUE
Name would n't open every box .,Name would n't open every box .,-34.18125032094903,-4.883035760135576,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.883035760135576,-5.644124253698673,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-45.10913198000242,-5.638641497500302,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.923633610280476,-5.638641497500302,TRUE
Name would n't open every box .,Name would n't open every box .,-34.46543527196333,-4.923633610280476,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.923633610280476,-5.638641497500302,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-46.00032745126681,-5.750040931408352,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.017345484403855,-5.750040931408352,TRUE
Name would n't open every box .,Name would n't open every box .,-35.12141839082699,-5.017345484403855,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.017345484403855,-5.750040931408352,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-45.372879991699726,-5.671609998962466,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.909386170467835,-5.671609998962466,TRUE
Name would n't open every box .,Name would n't open every box .,-34.36570319327485,-4.909386170467835,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.909386170467835,-5.671609998962466,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-44.99232075905519,-5.624040094881899,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.932838715653495,-5.624040094881899,TRUE
Name would n't open every box .,Name would n't open every box .,-34.529871009574464,-4.932838715653495,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.932838715653495,-5.624040094881899,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-45.32422507034565,-5.665528133793206,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.9666679145528985,-5.665528133793206,TRUE
Name would n't open every box .,Name would n't open every box .,-34.76667540187029,-4.9666679145528985,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.9666679145528985,-5.665528133793206,TRUE
Name would n't waste away every box .,Name would n't waste away every box .,-45.28605792653918,-5.660757240817397,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _waste) (PRT _away) (NP (DT _every) (NN _box)))) (. _.)),bad,causative,171,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.980009910182701,-5.660757240817397,TRUE
Name would n't open every box .,Name would n't open every box .,-34.860069371278904,-4.980009910182701,(ROOT (NP _Name) (VP (MD _would) (NOT _n't) (VP (VB _open) (NP (DT _every) (NN _box)))) (. _.)),good,causative,171,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.980009910182701,-5.660757240817397,TRUE
Name could sneeze Name .,Name could sneeze Name .,-24.6713150453908,-4.93426300907816,(ROOT (NP _Name) (VP (MD _could) (VP (VBP _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.690302955700882,-4.93426300907816,TRUE
Name could stand up Name .,Name could stand up Name .,-28.14181773420529,-4.690302955700882,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.690302955700882,-4.93426300907816,TRUE
Name could sneeze Name .,Name could sneeze Name .,-25.103781604390534,-5.020756320878107,(ROOT (NP _Name) (VP (MD _could) (VP (VB _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.75095198142412,-5.020756320878107,TRUE
Name could stand up Name .,Name could stand up Name .,-28.505711888544724,-4.75095198142412,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.75095198142412,-5.020756320878107,TRUE
Name could sneeze Name .,Name could sneeze Name .,-25.605874718321967,-5.121174943664394,(ROOT (NP _Name) (VP (MD _could) (VP (VBP _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.807876188830146,-5.121174943664394,TRUE
Name could stand up Name .,Name could stand up Name .,-28.847257132980875,-4.807876188830146,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.807876188830146,-5.121174943664394,TRUE
Name could sneeze Name .,Name could sneeze Name .,-24.745063693695407,-4.949012738739081,(ROOT (NP _Name) (VP (MD _could) (VP (VBP _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.668741785814586,-4.949012738739081,TRUE
Name could stand up Name .,Name could stand up Name .,-28.012450714887514,-4.668741785814586,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.668741785814586,-4.949012738739081,TRUE
Name could sneeze Name .,Name could sneeze Name .,-25.60502943660947,-5.121005887321894,(ROOT (NP _Name) (VP (MD _could) (VP (VBP _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.744152339460035,-5.121005887321894,TRUE
Name could stand up Name .,Name could stand up Name .,-28.46491403676021,-4.744152339460035,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.744152339460035,-5.121005887321894,TRUE
Name could sneeze Name .,Name could sneeze Name .,-24.77308920408686,-4.954617840817372,(ROOT (NP _Name) (VP (MD _could) (VP (VBP _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.717849616909374,-4.954617840817372,TRUE
Name could stand up Name .,Name could stand up Name .,-28.307097701456247,-4.717849616909374,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.717849616909374,-4.954617840817372,TRUE
Name could sneeze Name .,Name could sneeze Name .,-25.4460090897247,-5.08920181794494,(ROOT (NP _Name) (VP (MD _could) (VP (VBP _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.785360261604976,-5.08920181794494,TRUE
Name could stand up Name .,Name could stand up Name .,-28.712161569629856,-4.785360261604976,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.785360261604976,-5.08920181794494,TRUE
Name could sneeze Name .,Name could sneeze Name .,-24.97745960205633,-4.995491920411267,(ROOT (NP _Name) (VP (MD _could) (VP (VB _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.716467561604028,-4.995491920411267,TRUE
Name could stand up Name .,Name could stand up Name .,-28.298805369624166,-4.716467561604028,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.716467561604028,-4.995491920411267,TRUE
Name could sneeze Name .,Name could sneeze Name .,-24.901587385895144,-4.980317477179029,(ROOT (NP _Name) (VP (MD _could) (VP (VBP _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.74495016144231,-4.980317477179029,TRUE
Name could stand up Name .,Name could stand up Name .,-28.469700968653864,-4.74495016144231,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.74495016144231,-4.980317477179029,TRUE
Name could sneeze Name .,Name could sneeze Name .,-24.89638933197198,-4.979277866394396,(ROOT (NP _Name) (VP (MD _could) (VP (VBP _sneeze) (NP _Name))) (. _.)),bad,causative,173,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.666098409751935,-4.979277866394396,TRUE
Name could stand up Name .,Name could stand up Name .,-27.996590458511605,-4.666098409751935,(ROOT (NP _Name) (VP (MD _could) (VP (VB _stand) (PRT _up) (NP _Name))) (. _.)),good,causative,173,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.666098409751935,-4.979277866394396,TRUE
Name moves Name .,Name moves Name .,-18.790669501223302,-4.697667375305826,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.697667375305826,-4.740278899148993,TRUE
Name got a job Name .,Name got a job Name .,-28.441673394893957,-4.740278899148993,(ROOT (NP _Name) (VP (VBD _got) (NP (DT _a) (NN _job)) (NP _Name)) (. _.)),bad,causative,221,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.697667375305826,-4.740278899148993,TRUE
Name moves Name .,Name moves Name .,-18.500743941441243,-4.625185985360311,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.625185985360311,-4.803501035538472,TRUE
Name got a job Name .,Name got a job Name .,-28.821006213230834,-4.803501035538472,(ROOT (NP _Name) (VP (VBD _got) (NP (DT _a) (NN _job)) (NP _Name)) (. _.)),bad,causative,221,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.625185985360311,-4.803501035538472,TRUE
Name moves Name .,Name moves Name .,-18.61710917309207,-4.654277293273018,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.654277293273018,-4.8629443405185695,TRUE
Name got a job Name .,Name got a job Name .,-29.17766604311142,-4.8629443405185695,(ROOT (NP _Name) (VP (VBD _got) (NP (DT _a) (NN _job)) (NP _Name)) (. _.)),bad,causative,221,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.654277293273018,-4.8629443405185695,TRUE
Name moves Name .,Name moves Name .,-18.957388062613482,-4.739347015653371,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.739347015653371,-4.807331451617504,TRUE
Name got a job Name .,Name got a job Name .,-28.843988709705023,-4.807331451617504,(ROOT (NP _Name) (VP (VBD _got) (NP (DT _a) (NN _job)) (NP _Name)) (. _.)),bad,causative,221,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.739347015653371,-4.807331451617504,TRUE
Name moves Name .,Name moves Name .,-19.668579217790214,-4.917144804447553,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.917144804447553,-4.86078997097884,FALSE
Name got a job Name .,Name got a job Name .,-29.16473982587304,-4.86078997097884,(ROOT (NP _Name) (VP (VB _got) (NP (DT _a) (NN _job)) (NP _Name)) (. _.)),bad,causative,221,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.917144804447553,-4.86078997097884,FALSE
Name moves Name .,Name moves Name .,-18.139841786527548,-4.534960446631887,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.534960446631887,-4.801696349016759,TRUE
Name got a job Name .,Name got a job Name .,-28.810178094100557,-4.801696349016759,(ROOT (NP _Name) (VP (VBD _got) (NP (DT _a) (NN _job)) (NP _Name)) (. _.)),bad,causative,221,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.534960446631887,-4.801696349016759,TRUE
Name moves Name .,Name moves Name .,-19.770750999953165,-4.942687749988291,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.942687749988291,-4.795043834284349,FALSE
Name got a job Name .,Name got a job Name .,-28.77026300570609,-4.795043834284349,(ROOT (NP _Name) (VP (VBD _got) (NP (DT _a) (NN _job)) (NP _Name)) (. _.)),bad,causative,221,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.942687749988291,-4.795043834284349,FALSE
Name moves Name .,Name moves Name .,-18.768448372467855,-4.692112093116964,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.692112093116964,-Inf,NA
Name moves Name .,Name moves Name .,-19.04334428177387,-4.760836070443467,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.760836070443467,-4.867386223787183,TRUE
Name got a job Name .,Name got a job Name .,-29.2043173427231,-4.867386223787183,(ROOT (NP _Name) (VP (VBD _got) (NP (DT _a) (NN _job)) (NP _Name)) (. _.)),bad,causative,221,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.760836070443467,-4.867386223787183,TRUE
Name moves Name .,Name moves Name .,-18.533395344499944,-4.633348836124986,(ROOT (NP _Name) (VP (VBZ _moves) (NP _Name)) (. _.)),good,causative,221,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.633348836124986,-Inf,NA
Name tipped over this carriage .,Name tipped over this carriage .,-34.96872711851903,-5.828121186419838,(ROOT (NP _Name) (VP (VBD _tipped) (PRT _over) (NP (DT _this) (NN _carriage))) (. _.)),good,causative,305,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.828121186419838,-5.704858151151616,FALSE
Name falls this carriage .,Name falls this carriage .,-28.52429075575808,-5.704858151151616,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.828121186419838,-5.704858151151616,FALSE
Name tipped over this carriage .,Name tipped over this carriage .,-34.77597146412391,-5.795995244020652,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.795995244020652,-5.765144796811191,FALSE
Name falls this carriage .,Name falls this carriage .,-28.82572398405595,-5.765144796811191,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.795995244020652,-5.765144796811191,FALSE
Name tipped over this carriage .,Name tipped over this carriage .,-35.15098139149462,-5.858496898582437,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.858496898582437,-5.797955117919035,FALSE
Name falls this carriage .,Name falls this carriage .,-28.989775589595176,-5.797955117919035,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.858496898582437,-5.797955117919035,FALSE
Name tipped over this carriage .,Name tipped over this carriage .,-35.282256850892104,-5.880376141815351,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.880376141815351,-5.814195945471269,FALSE
Name falls this carriage .,Name falls this carriage .,-29.070979727356345,-5.814195945471269,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.880376141815351,-5.814195945471269,FALSE
Name tipped over this carriage .,Name tipped over this carriage .,-34.52890629138834,-5.75481771523139,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.75481771523139,-5.816993641167905,TRUE
Name falls this carriage .,Name falls this carriage .,-29.084968205839523,-5.816993641167905,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.75481771523139,-5.816993641167905,TRUE
Name tipped over this carriage .,Name tipped over this carriage .,-35.444508105278,-5.907418017546333,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.907418017546333,-5.872201313746776,FALSE
Name falls this carriage .,Name falls this carriage .,-29.361006568733877,-5.872201313746776,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.907418017546333,-5.872201313746776,FALSE
Name tipped over this carriage .,Name tipped over this carriage .,-34.23539635236458,-5.705899392060764,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.705899392060764,-5.723347572408803,TRUE
Name falls this carriage .,Name falls this carriage .,-28.616737862044015,-5.723347572408803,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.705899392060764,-5.723347572408803,TRUE
Name tipped over this carriage .,Name tipped over this carriage .,-35.263076090380224,-5.877179348396704,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.877179348396704,-5.8395940816089205,FALSE
Name falls this carriage .,Name falls this carriage .,-29.197970408044604,-5.8395940816089205,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.877179348396704,-5.8395940816089205,FALSE
Name tipped over this carriage .,Name tipped over this carriage .,-35.1106685443167,-5.85177809071945,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.85177809071945,-5.831374461987995,FALSE
Name falls this carriage .,Name falls this carriage .,-29.156872309939974,-5.831374461987995,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.85177809071945,-5.831374461987995,FALSE
Name tipped over this carriage .,Name tipped over this carriage .,-34.24142959343911,-5.706904932239851,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,305,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.706904932239851,-5.872276808824822,TRUE
Name falls this carriage .,Name falls this carriage .,-29.361384044124108,-5.872276808824822,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _this) (NN _carriage))) (. _.)),bad,causative,305,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.706904932239851,-5.872276808824822,TRUE
Name was rolling that bicycle .,Name was rolling that bicycle .,-36.7814085215148,-6.1302347535858,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-6.1302347535858,-6.222677836582896,TRUE
Name was falling that bicycle .,Name was falling that bicycle .,-37.33606701949738,-6.222677836582896,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-6.1302347535858,-6.222677836582896,TRUE
Name was rolling that bicycle .,Name was rolling that bicycle .,-35.681521868545666,-5.946920311424278,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.946920311424278,-6.2426109976596,TRUE
Name was falling that bicycle .,Name was falling that bicycle .,-37.4556659859576,-6.2426109976596,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.946920311424278,-6.2426109976596,TRUE
Name was rolling that bicycle .,Name was rolling that bicycle .,-36.32423144835733,-6.0540385747262215,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.0540385747262215,-6.1019165879745545,TRUE
Name was falling that bicycle .,Name was falling that bicycle .,-36.61149952784733,-6.1019165879745545,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.0540385747262215,-6.1019165879745545,TRUE
Name was rolling that bicycle .,Name was rolling that bicycle .,-37.19139813919834,-6.198566356533057,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-6.198566356533057,-6.131133577271389,FALSE
Name was falling that bicycle .,Name was falling that bicycle .,-36.786801463628336,-6.131133577271389,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-6.198566356533057,-6.131133577271389,FALSE
Name was rolling that bicycle .,Name was rolling that bicycle .,-37.09375878681316,-6.182293131135527,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-6.182293131135527,-6.005258008616828,FALSE
Name was falling that bicycle .,Name was falling that bicycle .,-36.031548051700966,-6.005258008616828,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-6.182293131135527,-6.005258008616828,FALSE
Name was rolling that bicycle .,Name was rolling that bicycle .,-36.558929120939936,-6.093154853489989,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.093154853489989,-6.056008534859989,FALSE
Name was falling that bicycle .,Name was falling that bicycle .,-36.33605120915993,-6.056008534859989,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.093154853489989,-6.056008534859989,FALSE
Name was rolling that bicycle .,Name was rolling that bicycle .,-36.896024443807754,-6.149337407301292,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.149337407301292,-6.055583884124079,FALSE
Name was falling that bicycle .,Name was falling that bicycle .,-36.333503304744475,-6.055583884124079,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.149337407301292,-6.055583884124079,FALSE
Name was rolling that bicycle .,Name was rolling that bicycle .,-37.44593858888998,-6.240989764814997,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.240989764814997,-6.3084232943433305,TRUE
Name was falling that bicycle .,Name was falling that bicycle .,-37.85053976605998,-6.3084232943433305,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.240989764814997,-6.3084232943433305,TRUE
Name was rolling that bicycle .,Name was rolling that bicycle .,-37.20349190812511,-6.200581984687518,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-6.200581984687518,-6.200581984687518,FALSE
Name was falling that bicycle .,Name was falling that bicycle .,-37.20349190812511,-6.200581984687518,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-6.200581984687518,-6.200581984687518,FALSE
Name was rolling that bicycle .,Name was rolling that bicycle .,-36.465667528957546,-6.077611254826258,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _that) (NN _bicycle)))) (. _.)),good,causative,378,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-6.077611254826258,-6.077611254826258,FALSE
Name was falling that bicycle .,Name was falling that bicycle .,-36.465667528957546,-6.077611254826258,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _that) (NN _bicycle)))) (. _.)),bad,causative,378,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-6.077611254826258,-6.077611254826258,FALSE
Name was falling a car .,Name was falling a car .,-30.849731995233142,-5.141621999205523,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.047419687076283,-5.141621999205523,TRUE
Name was rolling a car .,Name was rolling a car .,-30.284518122457698,-5.047419687076283,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.047419687076283,-5.141621999205523,TRUE
Name was falling a car .,Name was falling a car .,-32.49186349975138,-5.415310583291897,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.204572133103669,-5.415310583291897,TRUE
Name was rolling a car .,Name was rolling a car .,-31.227432798622015,-5.204572133103669,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.204572133103669,-5.415310583291897,TRUE
Name was falling a car .,Name was falling a car .,-31.37453807780545,-5.229089679634241,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.1812116663859085,-5.229089679634241,TRUE
Name was rolling a car .,Name was rolling a car .,-31.08726999831545,-5.1812116663859085,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.1812116663859085,-5.229089679634241,TRUE
Name was falling a car .,Name was falling a car .,-31.71630789875022,-5.28605131645837,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.353484095720035,-5.28605131645837,FALSE
Name was rolling a car .,Name was rolling a car .,-32.120904574320214,-5.353484095720035,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.353484095720035,-5.28605131645837,FALSE
Name was falling a car .,Name was falling a car .,-30.89565022590691,-5.149275037651152,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.335642254525869,-5.149275037651152,FALSE
Name was rolling a car .,Name was rolling a car .,-32.01385352715521,-5.335642254525869,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.335642254525869,-5.149275037651152,FALSE
Name was falling a car .,Name was falling a car .,-31.03164732580524,-5.17194122096754,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.209087539597539,-5.17194122096754,FALSE
Name was rolling a car .,Name was rolling a car .,-31.254525237585238,-5.209087539597539,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.209087539597539,-5.17194122096754,FALSE
Name was falling a car .,Name was falling a car .,-30.823082027920943,-5.137180337986824,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.227817182463453,-5.137180337986824,FALSE
Name was rolling a car .,Name was rolling a car .,-31.366903094780717,-5.227817182463453,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.227817182463453,-5.137180337986824,FALSE
Name was falling a car .,Name was falling a car .,-32.557171522093995,-5.426195253682333,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.358761724154,-5.426195253682333,TRUE
Name was rolling a car .,Name was rolling a car .,-32.152570344924,-5.358761724154,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.358761724154,-5.426195253682333,TRUE
Name was falling a car .,Name was falling a car .,-31.88832491207354,-5.314720818678923,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.314720818678923,-5.314720818678923,FALSE
Name was rolling a car .,Name was rolling a car .,-31.88832491207354,-5.314720818678923,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.314720818678923,-5.314720818678923,FALSE
Name was falling a car .,Name was falling a car .,-31.304879278323185,-5.217479879720531,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _falling) (NP (DT _a) (NN _car)))) (. _.)),bad,causative,440,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.217479879720531,-5.217479879720531,FALSE
Name was rolling a car .,Name was rolling a car .,-31.304879278323185,-5.217479879720531,(ROOT (NP _Name) (VP (AUX _was) (VP (VBG _rolling) (NP (DT _a) (NN _car)))) (. _.)),good,causative,440,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.217479879720531,-5.217479879720531,FALSE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-45.27424571534429,-5.659280714418037,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.026644974814076,-5.659280714418037,TRUE
Name can n't break these forks .,Name can n't break these forks .,-35.18651482369853,-5.026644974814076,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.026644974814076,-5.659280714418037,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-44.51958437817448,-5.56494804727181,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.89413753769298,-5.56494804727181,TRUE
Name can n't break these forks .,Name can n't break these forks .,-34.25896276385086,-4.89413753769298,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.89413753769298,-5.56494804727181,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-46.442707428319935,-5.805338428539992,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.141307493966834,-5.805338428539992,TRUE
Name can n't break these forks .,Name can n't break these forks .,-35.98915245776784,-5.141307493966834,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.141307493966834,-5.805338428539992,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-44.63815350407167,-5.579769188008958,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.96969629260714,-5.579769188008958,TRUE
Name can n't break these forks .,Name can n't break these forks .,-34.78787404824998,-4.96969629260714,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.96969629260714,-5.579769188008958,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-44.85444446311122,-5.606805557888903,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.967678621399224,-5.606805557888903,TRUE
Name can n't break these forks .,Name can n't break these forks .,-34.77375034979457,-4.967678621399224,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.967678621399224,-5.606805557888903,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-44.79544605220722,-5.599430756525902,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.94771508187526,-5.599430756525902,TRUE
Name can n't break these forks .,Name can n't break these forks .,-34.63400557312682,-4.94771508187526,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.94771508187526,-5.599430756525902,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-45.38043926657035,-5.672554908321294,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.893839039450884,-5.672554908321294,TRUE
Name can n't break these forks .,Name can n't break these forks .,-34.25687327615619,-4.893839039450884,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.893839039450884,-5.672554908321294,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-45.26982532040108,-5.658728165050135,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.993820108467602,-5.658728165050135,TRUE
Name can n't break these forks .,Name can n't break these forks .,-34.95674075927322,-4.993820108467602,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.993820108467602,-5.658728165050135,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-44.623925102112096,-5.577990637764012,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.908986692353298,-5.577990637764012,TRUE
Name can n't break these forks .,Name can n't break these forks .,-34.36290684647309,-4.908986692353298,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.908986692353298,-5.577990637764012,TRUE
Name can n't fall apart these forks .,Name can n't fall apart these forks .,-45.56463580105619,-5.695579475132024,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (PRT _apart) (NP (DT _these) (NNS _forks)))) (. _.)),bad,causative,459,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.006710165400073,-5.695579475132024,TRUE
Name can n't break these forks .,Name can n't break these forks .,-35.04697115780051,-5.006710165400073,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _break) (NP (DT _these) (NNS _forks)))) (. _.)),good,causative,459,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.006710165400073,-5.695579475132024,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-28.941260739029477,-5.788252147805896,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (NN _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.271887310510033,-5.788252147805896,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-26.359436552550168,-5.271887310510033,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (NN _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.271887310510033,-5.788252147805896,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-28.548299815820567,-5.709659963164113,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (NN _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.297979967176111,-5.709659963164113,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-26.489899835880554,-5.297979967176111,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (NN _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.297979967176111,-5.709659963164113,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-32.538161281737764,-6.507632256347553,(ROOT (NP _Name) (VP (VBZ _falls) (ADVP (DT _some) (JJ _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.210093744754955,-6.507632256347553,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-31.050468723774774,-6.210093744754955,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (JJ _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.210093744754955,-6.507632256347553,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-28.19395905728517,-5.638791811457034,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (NN _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.255743654360184,-5.638791811457034,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-26.27871827180092,-5.255743654360184,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (NN _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.255743654360184,-5.638791811457034,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-29.383778848332028,-5.876755769666405,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (NN _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.372336281530618,-5.876755769666405,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-26.86168140765309,-5.372336281530618,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (NN _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.372336281530618,-5.876755769666405,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-28.56920905427922,-5.713841810855844,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (NN _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.263163305841887,-5.713841810855844,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-26.31581652920944,-5.263163305841887,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (NN _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.263163305841887,-5.713841810855844,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-36.407168089237615,-7.281433617847523,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (VB _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.8029054424816975,-7.281433617847523,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-34.01452721240849,-6.8029054424816975,(ROOT (NP _Name) (VP (VBD _broke) (NP _some) (VP _wheelbarrow)) (. _.)),good,causative,461,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.8029054424816975,-7.281433617847523,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-32.91965383866971,-6.583930767733942,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (JJ _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.164126149923791,-6.583930767733942,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-30.820630749618957,-6.164126149923791,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (JJ _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.164126149923791,-6.583930767733942,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-29.344217438484478,-5.868843487696895,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (NN _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.422266983756975,-5.868843487696895,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-27.111334918784877,-5.422266983756975,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (NN _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.422266983756975,-5.868843487696895,TRUE
Name falls some wheelbarrow .,Name falls some wheelbarrow .,-29.903242600799555,-5.980648520159911,(ROOT (NP _Name) (VP (VBZ _falls) (NP (DT _some) (NN _wheelbarrow))) (. _.)),bad,causative,461,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.386581422032692,-5.980648520159911,TRUE
Name broke some wheelbarrow .,Name broke some wheelbarrow .,-26.93290711016346,-5.386581422032692,(ROOT (NP _Name) (VP (VBD _broke) (NP (DT _some) (NN _wheelbarrow))) (. _.)),good,causative,461,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.386581422032692,-5.980648520159911,TRUE
Name might wash Name .,Name might wash Name .,-23.95070097235453,-4.790140194470906,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.790140194470906,-4.677536213609868,FALSE
Name might sing Name .,Name might sing Name .,-23.387681068049343,-4.677536213609868,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.790140194470906,-4.677536213609868,FALSE
Name might wash Name .,Name might wash Name .,-24.12115084228194,-4.824230168456388,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.824230168456388,-4.658927767178437,FALSE
Name might sing Name .,Name might sing Name .,-23.294638835892183,-4.658927767178437,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.824230168456388,-4.658927767178437,FALSE
Name might wash Name .,Name might wash Name .,-24.236010590939575,-4.847202118187915,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.847202118187915,-4.715398917255601,FALSE
Name might sing Name .,Name might sing Name .,-23.576994586278005,-4.715398917255601,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.847202118187915,-4.715398917255601,FALSE
Name might wash Name .,Name might wash Name .,-23.79909507836916,-4.759819015673832,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.759819015673832,-4.650140762356987,FALSE
Name might sing Name .,Name might sing Name .,-23.250703811784934,-4.650140762356987,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.759819015673832,-4.650140762356987,FALSE
Name might wash Name .,Name might wash Name .,-23.805892365960705,-4.761178473192141,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.761178473192141,-4.629479242127155,FALSE
Name might sing Name .,Name might sing Name .,-23.147396210635772,-4.629479242127155,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.761178473192141,-4.629479242127155,FALSE
Name might wash Name .,Name might wash Name .,-23.56306136889307,-4.712612273778614,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.712612273778614,-4.600389760107197,FALSE
Name might sing Name .,Name might sing Name .,-23.00194880053598,-4.600389760107197,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.712612273778614,-4.600389760107197,FALSE
Name might wash Name .,Name might wash Name .,-23.837869628668003,-4.7675739257336005,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.7675739257336005,-4.667802772845734,FALSE
Name might sing Name .,Name might sing Name .,-23.339013864228672,-4.667802772845734,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.7675739257336005,-4.667802772845734,FALSE
Name might wash Name .,Name might wash Name .,-24.001998096086623,-4.800399619217325,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.800399619217325,-4.713355446351325,FALSE
Name might sing Name .,Name might sing Name .,-23.566777231756625,-4.713355446351325,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.800399619217325,-4.713355446351325,FALSE
Name might wash Name .,Name might wash Name .,-23.812536888262194,-4.762507377652439,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.762507377652439,-4.643057743602005,FALSE
Name might sing Name .,Name might sing Name .,-23.215288718010022,-4.643057743602005,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.762507377652439,-4.643057743602005,FALSE
Name might wash Name .,Name might wash Name .,-23.943989305010795,-4.788797861002159,(ROOT (NP _Name) (VP (MD _might) (VP (VB _wash) (NP _Name))) (. _.)),good,causative,493,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.788797861002159,-4.6804213319000265,FALSE
Name might sing Name .,Name might sing Name .,-23.402106659500134,-4.6804213319000265,(ROOT (NP _Name) (VP (MD _might) (VP (VB _sing) (NP _Name))) (. _.)),bad,causative,493,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.788797861002159,-4.6804213319000265,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-37.826309142492676,-5.403758448927525,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.403758448927525,-4.98661139380296,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-34.90627975662072,-4.98661139380296,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.403758448927525,-4.98661139380296,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-37.88728755158621,-5.412469650226602,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.412469650226602,-4.98471381338188,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-34.89299669367316,-4.98471381338188,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.412469650226602,-4.98471381338188,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-40.28296457935192,-5.754709225621703,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.754709225621703,-5.227013871863902,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-36.589097103047315,-5.227013871863902,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.754709225621703,-5.227013871863902,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-37.91437119549428,-5.416338742213469,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.416338742213469,-5.094267802080843,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-35.6598746145659,-5.094267802080843,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.416338742213469,-5.094267802080843,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-38.015096178139395,-5.430728025448485,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.430728025448485,-5.075872449399676,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-35.53110714579773,-5.075872449399676,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.430728025448485,-5.075872449399676,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-39.33184434907754,-5.6188349070110775,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.6188349070110775,-5.218208992136312,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-36.52746294495418,-5.218208992136312,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.6188349070110775,-5.218208992136312,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-39.01858109361834,-5.574083013374048,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.574083013374048,-5.074833759148517,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-35.52383631403962,-5.074833759148517,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.574083013374048,-5.074833759148517,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-38.089119909890265,-5.441302844270038,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.441302844270038,-5.0904707559882505,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-35.633295291917754,-5.0904707559882505,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.441302844270038,-5.0904707559882505,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-38.55096577162952,-5.507280824518503,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.507280824518503,-5.078601504503561,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-35.550210531524925,-5.078601504503561,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.507280824518503,-5.078601504503561,FALSE
Name can n't bake these cakes .,Name can n't bake these cakes .,-38.24448943755288,-5.463498491078982,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _bake) (NP (DT _these) (NNS _cakes)))) (. _.)),good,causative,504,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.463498491078982,-5.104393107721816,FALSE
Name can n't fall these cakes .,Name can n't fall these cakes .,-35.73075175405271,-5.104393107721816,(ROOT (NP _Name) (VP (MD _can) (NOT _n't) (VP (VB _fall) (NP (DT _these) (NNS _cakes)))) (. _.)),bad,causative,504,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.463498491078982,-5.104393107721816,FALSE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-39.87877957746754,-5.696968511066792,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (NN _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.81071985231838,-5.696968511066792,FALSE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-40.67503896622866,-5.81071985231838,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (NN _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.81071985231838,-5.696968511066792,FALSE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-39.79146522080954,-5.684495031544221,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (NN _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.770879273330068,-5.684495031544221,FALSE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-40.396154913310475,-5.770879273330068,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (NN _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.770879273330068,-5.684495031544221,FALSE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-43.7751601016066,-6.253594300229515,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (ADVP (DT _a) (JJ _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.413731916727655,-6.253594300229515,FALSE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-44.896123417093584,-6.413731916727655,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (JJ _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.413731916727655,-6.253594300229515,FALSE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-39.340613990572336,-5.620087712938905,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (NN _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.716848628815745,-5.620087712938905,FALSE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-40.01794040171021,-5.716848628815745,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (NN _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.716848628815745,-5.620087712938905,FALSE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-40.14301962918076,-5.734717089882966,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (NN _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.730255118718371,-5.734717089882966,TRUE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-40.1117858310286,-5.730255118718371,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (NN _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.730255118718371,-5.734717089882966,TRUE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-39.714784564145084,-5.673540652020726,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (NN _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.559941164002741,-5.673540652020726,FALSE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-45.91958814801919,-6.559941164002741,(ROOT (NP _Name) (VP (MD _could) (NP (NN _tip) (PP (IN _over) (NP (DT _a) (NN _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.559941164002741,-5.673540652020726,FALSE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-48.404984949032865,-6.914997849861838,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (VB _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.951362285822263,-6.914997849861838,FALSE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-48.65953600075584,-6.951362285822263,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (VB _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.951362285822263,-6.914997849861838,FALSE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-44.15278573981974,-6.307540819974249,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (JJ _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.456959759595632,-6.307540819974249,FALSE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-45.19871831716942,-6.456959759595632,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (JJ _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.456959759595632,-6.307540819974249,FALSE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-40.24971617998372,-5.749959454283389,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (NN _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.728188494067412,-5.749959454283389,TRUE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-40.09731945847189,-5.728188494067412,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (NN _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.728188494067412,-5.749959454283389,TRUE
Name could fall apart a wheelbarrow .,Name could fall apart a wheelbarrow .,-40.575289128465826,-5.796469875495118,(ROOT (NP _Name) (VP (MD _could) (VP (VB _fall) (PRT _apart) (NP (DT _a) (NN _wheelbarrow)))) (. _.)),bad,causative,538,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.7913058214031015,-5.796469875495118,TRUE
Name could tip over a wheelbarrow .,Name could tip over a wheelbarrow .,-40.53914074982171,-5.7913058214031015,(ROOT (NP _Name) (VP (MD _could) (VP (VB _tip) (PP (IN _over) (NP (DT _a) (NN _wheelbarrow))))) (. _.)),good,causative,538,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.7913058214031015,-5.796469875495118,TRUE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-50.317043771361796,-5.590782641262422,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.818113222164957,-5.590782641262422,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-52.36301899948461,-5.818113222164957,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBN _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.818113222164957,-5.590782641262422,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-49.69957170509907,-5.522174633899897,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.704840248342337,-5.522174633899897,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-51.34356223508103,-5.704840248342337,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBN _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.704840248342337,-5.522174633899897,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-49.72957857257104,-5.525508730285671,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.569351437557024,-5.525508730285671,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-50.124162938013214,-5.569351437557024,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.569351437557024,-5.525508730285671,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-48.751053250579,-5.416783694508777,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.612767112995836,-5.416783694508777,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-50.51490401696252,-5.612767112995836,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBN _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.612767112995836,-5.416783694508777,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-48.87286821223039,-5.43031869024782,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.44148605820596,-5.43031869024782,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-48.97337452385364,-5.44148605820596,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.44148605820596,-5.43031869024782,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-49.66428401862746,-5.518253779847496,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.534929548131676,-5.518253779847496,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-49.81436593318509,-5.534929548131676,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.534929548131676,-5.518253779847496,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-48.525232780287034,-5.391692531143004,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.493259923371893,-5.391692531143004,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-49.43933931034704,-5.493259923371893,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.493259923371893,-5.391692531143004,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-49.53837353459937,-5.504263726066597,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.517842715398464,-5.504263726066597,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-49.66058443858618,-5.517842715398464,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.517842715398464,-5.504263726066597,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-48.74938584350811,-5.4165984270564564,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.5976584772964655,-5.4165984270564564,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-50.37892629566819,-5.5976584772964655,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBN _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.5976584772964655,-5.4165984270564564,FALSE
Name had n't disappeared a lot of forks .,Name had n't disappeared a lot of forks .,-48.79056864658678,-5.421174294065198,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _disappeared) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),bad,causative,591,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.498898199880666,-5.421174294065198,FALSE
Name had n't cracked a lot of forks .,Name had n't cracked a lot of forks .,-49.490083798925994,-5.498898199880666,(ROOT (NP _Name) (VP (AUX _had) (NOT _n't) (VP (VBD _cracked) (NP (DT _a) (NN _lot)) (PP (IN _of) (NP _forks)))) (. _.)),good,causative,591,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.498898199880666,-5.421174294065198,FALSE
those people fell most bananas .,those people fell most bananas .,-46.58984000741818,-7.764973334569697,(ROOT (NP (DT _those) (NNS _people)) (VP (VBD _fell) (NP (NN _most) (NNS _bananas))) (. _.)),bad,causative,600,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-8.099116255488923,-7.764973334569697,FALSE
those people grow most bananas .,those people grow most bananas .,-48.59469753293354,-8.099116255488923,(ROOT (NP (DT _those) (NNS _people)) (VP (VB _grow) (NP (NN _most) (NNS _bananas))) (. _.)),good,causative,600,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-8.099116255488923,-7.764973334569697,FALSE
those people fell most bananas .,those people fell most bananas .,-58.98946443091505,-9.831577405152508,(ROOT (NP (DT _those) (NNS _people)) (VP (VBD _fell) (NP (JJS _most) (PP _bananas))) (. _.)),bad,causative,600,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-10.134557458947237,-9.831577405152508,FALSE
those people grow most bananas .,those people grow most bananas .,-60.80734475368342,-10.134557458947237,(ROOT (NP (DT _those) (NNS _people)) (VP (VB _grow) (NP (JJS _most) (PP _bananas))) (. _.)),good,causative,600,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-10.134557458947237,-9.831577405152508,FALSE
those people fell most bananas .,those people fell most bananas .,-59.66053891426367,-9.943423152377278,(ROOT (NP (DT _those) (NNS _people)) (VP (VBD _fell) (NP (JJS _most) (PP _bananas))) (. _.)),bad,causative,600,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-10.294111595065084,-9.943423152377278,FALSE
those people grow most bananas .,those people grow most bananas .,-61.76466957039051,-10.294111595065084,(ROOT (NP (DT _those) (NNS _people)) (VP (VB _grow) (NP (JJS _most) (PP _bananas))) (. _.)),good,causative,600,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-10.294111595065084,-9.943423152377278,FALSE
those people fell most bananas .,those people fell most bananas .,-46.4391864043268,-7.739864400721133,(ROOT (NP (DT _those) (NNS _people)) (VP (VBD _fell) (NP (NN _most) (NNS _bananas))) (. _.)),bad,causative,600,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-8.041751873949172,-7.739864400721133,FALSE
those people grow most bananas .,those people grow most bananas .,-48.25051124369503,-8.041751873949172,(ROOT (NP (DT _those) (NNS _people)) (VP (VB _grow) (NP (NN _most) (NNS _bananas))) (. _.)),good,causative,600,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-8.041751873949172,-7.739864400721133,FALSE
those people fell most bananas .,those people fell most bananas .,-47.12986674135159,-7.8549777902252655,(ROOT (NP (DT _those) (NNS _people)) (VP (VBD _fell) (NP (NN _most) (NNS _bananas))) (. _.)),bad,causative,600,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-8.093772810294128,-7.8549777902252655,FALSE
those people grow most bananas .,those people grow most bananas .,-48.562636861764766,-8.093772810294128,(ROOT (NP (DT _those) (NNS _people)) (VP (VB _grow) (NP (NN _most) (NNS _bananas))) (. _.)),good,causative,600,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-8.093772810294128,-7.8549777902252655,FALSE
those people fell most bananas .,those people fell most bananas .,-46.554436802731416,-7.759072800455236,(ROOT (NP (DT _those) (NNS _people)) (VP (VBD _fell) (NP (NN _most) (NNS _bananas))) (. _.)),bad,causative,600,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-8.103133496515722,-7.759072800455236,FALSE
those people grow most bananas .,those people grow most bananas .,-48.61880097909433,-8.103133496515722,(ROOT (NP (DT _those) (NNS _people)) (VP (VB _grow) (NP (NN _most) (NNS _bananas))) (. _.)),good,causative,600,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-8.103133496515722,-7.759072800455236,FALSE
those people fell most bananas .,those people fell most bananas .,-46.72548133300775,-7.787580222167958,(ROOT (NP (DT _those) (NNS _people)) (VP (VBD _fell) (NP (NN _most) (NNS _bananas))) (. _.)),bad,causative,600,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-8.163498131298963,-7.787580222167958,FALSE
those people grow most bananas .,those people grow most bananas .,-48.980988787793784,-8.163498131298963,(ROOT (NP (DT _those) (NNS _people)) (VP (VB _grow) (NP (NN _most) (NNS _bananas))) (. _.)),good,causative,600,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-8.163498131298963,-7.787580222167958,FALSE
those people fell most bananas .,those people fell most bananas .,-46.48364004951271,-7.747273341585451,(ROOT (NP (DT _those) (NNS _people)) (VP (VBD _fell) (NP (NN _most) (NNS _bananas))) (. _.)),bad,causative,600,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-8.134834499307663,-7.747273341585451,FALSE
those people grow most bananas .,those people grow most bananas .,-48.809006995845984,-8.134834499307663,(ROOT (NP (DT _those) (NNS _people)) (VP (VB _grow) (NP (NN _most) (NNS _bananas))) (. _.)),good,causative,600,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-8.134834499307663,-7.747273341585451,FALSE
most ladies fall these glasses .,most ladies fall these glasses .,-46.26194659848206,-7.710324433080344,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _fall) (NP (DT _these) (NNS _glasses))) (. _.)),bad,causative,612,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-8.039397373962496,-7.710324433080344,FALSE
most ladies tip over these glasses .,most ladies tip over these glasses .,-56.275781617737465,-8.039397373962496,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _tip) (PP (IN _over) (NP (DT _these) (NNS _glasses)))) (. _.)),good,causative,612,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-8.039397373962496,-7.710324433080344,FALSE
most ladies fall these glasses .,most ladies fall these glasses .,-58.409437082888665,-9.734906180481444,(ROOT (NP (JJS _most) (PP _ladies)) (VP (VB _fall) (NP (DT _these) (NNS _glasses))) (. _.)),bad,causative,612,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-9.484723244809212,-9.734906180481444,TRUE
most ladies tip over these glasses .,most ladies tip over these glasses .,-66.39306271366448,-9.484723244809212,(ROOT (NP (JJS _most) (PP (NP (NP _ladies) (NN _tip)) (IN _over) (NP (DT _these) (NNS _glasses)))) (. _.)),good,causative,612,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-9.484723244809212,-9.734906180481444,TRUE
most ladies fall these glasses .,most ladies fall these glasses .,-59.444653967864745,-9.907442327977458,(ROOT (NP (JJS _most) (PP _ladies)) (VP (VB _fall) (NP (DT _these) (NNS _glasses))) (. _.)),bad,causative,612,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-9.606603773059565,-9.907442327977458,TRUE
most ladies tip over these glasses .,most ladies tip over these glasses .,-67.24622641141694,-9.606603773059565,(ROOT (NP (JJS _most) (PP (NP (NP _ladies) (NN _tip)) (IN _over) (NP (DT _these) (NNS _glasses)))) (. _.)),good,causative,612,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-9.606603773059565,-9.907442327977458,TRUE
most ladies fall these glasses .,most ladies fall these glasses .,-46.7485659952894,-7.791427665881566,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _fall) (NP (DT _these) (NNS _glasses))) (. _.)),bad,causative,612,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-8.106420622742831,-7.791427665881566,FALSE
most ladies tip over these glasses .,most ladies tip over these glasses .,-56.74494435919982,-8.106420622742831,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _tip) (PP (IN _over) (NP (DT _these) (NNS _glasses)))) (. _.)),good,causative,612,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-8.106420622742831,-7.791427665881566,FALSE
most ladies fall these glasses .,most ladies fall these glasses .,-47.05177326437128,-7.841962210728546,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _fall) (NP (DT _these) (NNS _glasses))) (. _.)),bad,causative,612,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-8.040368170264653,-7.841962210728546,FALSE
most ladies tip over these glasses .,most ladies tip over these glasses .,-56.282577191852575,-8.040368170264653,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _tip) (PP (IN _over) (NP (DT _these) (NNS _glasses)))) (. _.)),good,causative,612,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-8.040368170264653,-7.841962210728546,FALSE
most ladies fall these glasses .,most ladies fall these glasses .,-46.642901482976676,-7.773816913829446,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _fall) (NP (DT _these) (NNS _glasses))) (. _.)),bad,causative,612,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-8.816636949686298,-7.773816913829446,FALSE
most ladies tip over these glasses .,most ladies tip over these glasses .,-61.71645864780409,-8.816636949686298,(ROOT (NP (NP (NN _most) (NNS _ladies)) (NN _tip)) (PP (IN _over) (NP (DT _these) (NNS _glasses))) (. _.)),good,causative,612,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-8.816636949686298,-7.773816913829446,FALSE
most ladies fall these glasses .,most ladies fall these glasses .,-46.37778741490815,-7.729631235818025,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _fall) (NP (DT _these) (NNS _glasses))) (. _.)),bad,causative,612,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-8.067926750207535,-7.729631235818025,FALSE
most ladies tip over these glasses .,most ladies tip over these glasses .,-56.47548725145274,-8.067926750207535,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _tip) (PP (IN _over) (NP (DT _these) (NNS _glasses)))) (. _.)),good,causative,612,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-8.067926750207535,-7.729631235818025,FALSE
most ladies fall these glasses .,most ladies fall these glasses .,-46.31597748595173,-7.719329580991954,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _fall) (NP (DT _these) (NNS _glasses))) (. _.)),bad,causative,612,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-7.937518654470833,-7.719329580991954,FALSE
most ladies tip over these glasses .,most ladies tip over these glasses .,-55.56263058129583,-7.937518654470833,(ROOT (NP (NN _most) (NNS _ladies)) (VP (VB _tip) (PP (IN _over) (NP (DT _these) (NNS _glasses)))) (. _.)),good,causative,612,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-7.937518654470833,-7.719329580991954,FALSE
Name fell apart the mirrors .,Name fell apart the mirrors .,-32.88494272996224,-5.48082378832704,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.565482365807067,-5.48082378832704,FALSE
Name tipped over the mirrors .,Name tipped over the mirrors .,-33.3928941948424,-5.565482365807067,(ROOT (NP _Name) (VP (VBD _tipped) (PRT _over) (NP (DT _the) (NNS _mirrors))) (. _.)),good,causative,705,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.565482365807067,-5.48082378832704,FALSE
Name fell apart the mirrors .,Name fell apart the mirrors .,-33.65729772442848,-5.60954962073808,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.503965178326358,-5.60954962073808,TRUE
Name tipped over the mirrors .,Name tipped over the mirrors .,-33.02379106995815,-5.503965178326358,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _the) (NNS _mirrors)))) (. _.)),good,causative,705,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.503965178326358,-5.60954962073808,TRUE
Name fell apart the mirrors .,Name fell apart the mirrors .,-33.666806006335435,-5.611134334389239,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.575913671527444,-5.611134334389239,TRUE
Name tipped over the mirrors .,Name tipped over the mirrors .,-33.45548202916466,-5.575913671527444,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _the) (NNS _mirrors)))) (. _.)),good,causative,705,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.575913671527444,-5.611134334389239,TRUE
Name fell apart the mirrors .,Name fell apart the mirrors .,-33.8364105811708,-5.6394017635284674,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.583073101963712,-5.6394017635284674,TRUE
Name tipped over the mirrors .,Name tipped over the mirrors .,-33.49843861178227,-5.583073101963712,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _the) (NNS _mirrors)))) (. _.)),good,causative,705,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.583073101963712,-5.6394017635284674,TRUE
Name fell apart the mirrors .,Name fell apart the mirrors .,-33.56164844727425,-5.593608074545709,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.529080784315643,-5.593608074545709,TRUE
Name tipped over the mirrors .,Name tipped over the mirrors .,-33.17448470589386,-5.529080784315643,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _the) (NNS _mirrors)))) (. _.)),good,causative,705,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.529080784315643,-5.593608074545709,TRUE
Name fell apart the mirrors .,Name fell apart the mirrors .,-34.508138214678254,-5.751356369113043,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.688906187907651,-5.751356369113043,TRUE
Name tipped over the mirrors .,Name tipped over the mirrors .,-34.1334371274459,-5.688906187907651,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _the) (NNS _mirrors)))) (. _.)),good,causative,705,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.688906187907651,-5.751356369113043,TRUE
Name fell apart the mirrors .,Name fell apart the mirrors .,-33.31699459274789,-5.5528324321246485,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.410284413276135,-5.5528324321246485,TRUE
Name tipped over the mirrors .,Name tipped over the mirrors .,-32.46170647965681,-5.410284413276135,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _the) (NNS _mirrors)))) (. _.)),good,causative,705,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.410284413276135,-5.5528324321246485,TRUE
Name fell apart the mirrors .,Name fell apart the mirrors .,-33.55245077602565,-5.5920751293376085,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-Inf,-5.5920751293376085,NA
Name fell apart the mirrors .,Name fell apart the mirrors .,-33.393973417902835,-5.565662236317139,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.519069521609576,-5.565662236317139,TRUE
Name tipped over the mirrors .,Name tipped over the mirrors .,-33.114417129657454,-5.519069521609576,(ROOT (NP _Name) (VP (VBD _tipped) (PP (IN _over) (NP (DT _the) (NNS _mirrors)))) (. _.)),good,causative,705,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.519069521609576,-5.565662236317139,TRUE
Name fell apart the mirrors .,Name fell apart the mirrors .,-33.556717182008875,-5.592786197001479,(ROOT (NP _Name) (VP (VBD _fell) (PRT _apart) (NP (DT _the) (NNS _mirrors))) (. _.)),bad,causative,705,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-Inf,-5.592786197001479,NA
Name might grow bananas .,Name might grow bananas .,-32.77088272203172,-6.554176544406344,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-6.554176544406344,-6.220422733108102,FALSE
Name might fall bananas .,Name might fall bananas .,-31.10211366554051,-6.220422733108102,(ROOT (NP _Name) (VP (MD _might) (VP (VB _fall) (NP _bananas))) (. _.)),bad,causative,746,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-6.554176544406344,-6.220422733108102,FALSE
Name might grow bananas .,Name might grow bananas .,-32.77384348849228,-6.5547686976984565,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-6.5547686976984565,-6.204174677648502,FALSE
Name might fall bananas .,Name might fall bananas .,-31.02087338824251,-6.204174677648502,(ROOT (NP _Name) (VP (MD _might) (VP (VB _fall) (NP _bananas))) (. _.)),bad,causative,746,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-6.5547686976984565,-6.204174677648502,FALSE
Name might grow bananas .,Name might grow bananas .,-33.22199659985872,-6.644399319971744,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.644399319971744,-6.26323836541765,FALSE
Name might fall bananas .,Name might fall bananas .,-31.31619182708825,-6.26323836541765,(ROOT (NP _Name) (VP (MD _might) (VP (VB _fall) (NP _bananas))) (. _.)),bad,causative,746,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.644399319971744,-6.26323836541765,FALSE
Name might grow bananas .,Name might grow bananas .,-32.639197024502295,-6.527839404900459,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-6.527839404900459,-6.193401067277803,FALSE
Name might fall bananas .,Name might fall bananas .,-30.96700533638901,-6.193401067277803,(ROOT (NP _Name) (VP (MD _might) (VP (VB _fall) (NP _bananas))) (. _.)),bad,causative,746,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-6.527839404900459,-6.193401067277803,FALSE
Name might grow bananas .,Name might grow bananas .,-32.393142250136854,-6.4786284500273705,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-6.4786284500273705,-6.203473539627415,FALSE
Name might fall bananas .,Name might fall bananas .,-31.01736769813708,-6.203473539627415,(ROOT (NP _Name) (VP (MD _might) (VP (VB _fall) (NP _bananas))) (. _.)),bad,causative,746,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-6.4786284500273705,-6.203473539627415,FALSE
Name might grow bananas .,Name might grow bananas .,-32.719687689637865,-6.543937537927573,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.543937537927573,-6.202474894792315,FALSE
Name might fall bananas .,Name might fall bananas .,-31.01237447396158,-6.202474894792315,(ROOT (NP _Name) (VP (MD _might) (VP (VB _fall) (NP _bananas))) (. _.)),bad,causative,746,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.543937537927573,-6.202474894792315,FALSE
Name might grow bananas .,Name might grow bananas .,-33.184167413967984,-6.636833482793596,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.636833482793596,-6.217104085214749,FALSE
Name might fall bananas .,Name might fall bananas .,-31.085520426073746,-6.217104085214749,(ROOT (NP _Name) (VP (MD _might) (VP (VB _fall) (NP _bananas))) (. _.)),bad,causative,746,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.636833482793596,-6.217104085214749,FALSE
Name might grow bananas .,Name might grow bananas .,-32.742925472079236,-6.548585094415847,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.548585094415847,-Inf,NA
Name might grow bananas .,Name might grow bananas .,-33.177858345137174,-6.635571669027435,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-6.635571669027435,-6.2289945580660495,FALSE
Name might fall bananas .,Name might fall bananas .,-31.144972790330247,-6.2289945580660495,(ROOT (NP _Name) (VP (MD _might) (VP (VB _fall) (NP _bananas))) (. _.)),bad,causative,746,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-6.635571669027435,-6.2289945580660495,FALSE
Name might grow bananas .,Name might grow bananas .,-33.143759576662575,-6.628751915332515,(ROOT (NP _Name) (VP (MD _might) (VP (VB _grow) (NP _bananas))) (. _.)),good,causative,746,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-6.628751915332515,-Inf,NA
Name should paint Name .,Name should paint Name .,-23.91490052151533,-4.782980104303066,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.587519737865308,-4.782980104303066,TRUE
Name should move Name .,Name should move Name .,-22.93759868932654,-4.587519737865308,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.587519737865308,-4.782980104303066,TRUE
Name should paint Name .,Name should paint Name .,-24.111299777914606,-4.822259955582921,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.68384149132344,-4.822259955582921,TRUE
Name should move Name .,Name should move Name .,-23.419207456617197,-4.68384149132344,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.68384149132344,-4.822259955582921,TRUE
Name should paint Name .,Name should paint Name .,-24.000123796904482,-4.8000247593808965,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.69267974932386,-4.8000247593808965,TRUE
Name should move Name .,Name should move Name .,-23.4633987466193,-4.69267974932386,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.69267974932386,-4.8000247593808965,TRUE
Name should paint Name .,Name should paint Name .,-24.111103913372187,-4.822220782674437,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.6069455181640615,-4.822220782674437,TRUE
Name should move Name .,Name should move Name .,-23.034727590820307,-4.6069455181640615,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.6069455181640615,-4.822220782674437,TRUE
Name should paint Name .,Name should paint Name .,-25.072584588406688,-5.014516917681338,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.687947754200463,-5.014516917681338,TRUE
Name should move Name .,Name should move Name .,-23.439738771002315,-4.687947754200463,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.687947754200463,-5.014516917681338,TRUE
Name should paint Name .,Name should paint Name .,-23.782058306157552,-4.75641166123151,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.58335441104712,-4.75641166123151,TRUE
Name should move Name .,Name should move Name .,-22.916772055235597,-4.58335441104712,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.58335441104712,-4.75641166123151,TRUE
Name should paint Name .,Name should paint Name .,-23.68289017913268,-4.736578035826536,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.609264054280824,-4.736578035826536,TRUE
Name should move Name .,Name should move Name .,-23.04632027140412,-4.609264054280824,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.609264054280824,-4.736578035826536,TRUE
Name should paint Name .,Name should paint Name .,-23.915117355986393,-4.783023471197279,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.652908570697325,-4.783023471197279,TRUE
Name should move Name .,Name should move Name .,-23.264542853486624,-4.652908570697325,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.652908570697325,-4.783023471197279,TRUE
Name should paint Name .,Name should paint Name .,-23.935550830361084,-4.787110166072217,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.687790941013198,-4.787110166072217,TRUE
Name should move Name .,Name should move Name .,-23.43895470506599,-4.687790941013198,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.687790941013198,-4.787110166072217,TRUE
Name should paint Name .,Name should paint Name .,-23.745188612599566,-4.749037722519914,(ROOT (NP _Name) (VP (MD _should) (VP (VB _paint) (NP _Name))) (. _.)),bad,causative,817,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.6525042256570455,-4.749037722519914,TRUE
Name should move Name .,Name should move Name .,-23.262521128285226,-4.6525042256570455,(ROOT (NP _Name) (VP (MD _should) (VP (VB _move) (NP _Name))) (. _.)),good,causative,817,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.6525042256570455,-4.749037722519914,TRUE
Name has n't broken every car .,Name has n't broken every car .,-36.021769574030536,-5.145967082004362,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.145967082004362,-5.393813033136061,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-37.75669123195242,-5.393813033136061,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-5.145967082004362,-5.393813033136061,TRUE
Name has n't broken every car .,Name has n't broken every car .,-36.053412922626066,-5.1504875603751525,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.1504875603751525,-5.495964739773747,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-38.47175317841623,-5.495964739773747,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-5.1504875603751525,-5.495964739773747,TRUE
Name has n't broken every car .,Name has n't broken every car .,-35.48577043575274,-5.069395776536106,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.069395776536106,-5.368416801452422,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-37.578917610166954,-5.368416801452422,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-5.069395776536106,-5.368416801452422,TRUE
Name has n't broken every car .,Name has n't broken every car .,-35.56118030204891,-5.080168614578416,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.080168614578416,-5.401391957906401,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-37.80974370534481,-5.401391957906401,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-5.080168614578416,-5.401391957906401,TRUE
Name has n't broken every car .,Name has n't broken every car .,-35.659858256238834,-5.094265465176976,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.094265465176976,-5.4099257112497,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-37.869479978747904,-5.4099257112497,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-5.094265465176976,-5.4099257112497,TRUE
Name has n't broken every car .,Name has n't broken every car .,-36.679587538796106,-5.239941076970872,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.239941076970872,-5.540963350628233,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-38.78674345439763,-5.540963350628233,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-5.239941076970872,-5.540963350628233,TRUE
Name has n't broken every car .,Name has n't broken every car .,-36.1348744565581,-5.162124922365443,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.162124922365443,-5.429577181164722,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-38.007040268153055,-5.429577181164722,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-5.162124922365443,-5.429577181164722,TRUE
Name has n't broken every car .,Name has n't broken every car .,-36.304187988456285,-5.186312569779469,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.186312569779469,-5.477710910322854,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-38.343976372259974,-5.477710910322854,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-5.186312569779469,-5.477710910322854,TRUE
Name has n't broken every car .,Name has n't broken every car .,-35.98528006697551,-5.140754295282216,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.140754295282216,-5.499399606518252,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-38.49579724562776,-5.499399606518252,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-5.140754295282216,-5.499399606518252,TRUE
Name has n't broken every car .,Name has n't broken every car .,-36.34071726325736,-5.191531037608194,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBN _broken) (NP (DT _every) (NN _car)))) (. _.)),good,causative,845,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.191531037608194,-5.450943533512167,TRUE
Name has n't disappeared every car .,Name has n't disappeared every car .,-38.156604734585166,-5.450943533512167,(ROOT (NP _Name) (VP (AUX _has) (NOT _n't) (VP (VBD _disappeared) (NP (DT _every) (NN _car)))) (. _.)),bad,causative,845,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-5.191531037608194,-5.450943533512167,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-61.18847376388015,-6.7987193070977945,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-6.506718449556966,-6.7987193070977945,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-52.05374759645573,-6.506718449556966,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-6.506718449556966,-6.7987193070977945,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-60.86306093322187,-6.762562325913541,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-6.399362787501421,-6.762562325913541,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-51.19490230001137,-6.399362787501421,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-6.399362787501421,-6.762562325913541,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-59.433347237289226,-6.603705248587692,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.320278851203564,-6.603705248587692,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-50.56223080962851,-6.320278851203564,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.320278851203564,-6.603705248587692,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-59.996058477745834,-6.666228719749537,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-6.42709573865748,-6.666228719749537,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-51.41676590925984,-6.42709573865748,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-6.42709573865748,-6.666228719749537,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-58.82116990270928,-6.535685544745475,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-6.461126421370169,-6.535685544745475,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-51.68901137096135,-6.461126421370169,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-6.461126421370169,-6.535685544745475,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-60.092664664873325,-6.67696274054148,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.528508748507806,-6.67696274054148,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-52.22806998806245,-6.528508748507806,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.528508748507806,-6.67696274054148,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-61.07053507244934,-6.785615008049927,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.589070716393223,-6.785615008049927,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-52.71256573114579,-6.589070716393223,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.589070716393223,-6.785615008049927,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-60.508824615236946,-6.723202735026328,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.470976994430896,-6.723202735026328,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-51.76781595544717,-6.470976994430896,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.470976994430896,-6.723202735026328,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-60.84658181349128,-6.760731312610142,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-6.560810324016421,-6.760731312610142,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-52.48648259213137,-6.560810324016421,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-6.560810324016421,-6.760731312610142,TRUE
this teacher was n't falling apart every bicycle .,this teacher was n't falling apart every bicycle .,-59.99318634121159,-6.665909593467955,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _falling) (PRT _apart) (NP (DT _every) (NN _bicycle)))) (. _.)),bad,causative,853,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-6.393835813701184,-6.665909593467955,TRUE
this teacher was n't rolling every bicycle .,this teacher was n't rolling every bicycle .,-51.15068650960947,-6.393835813701184,(ROOT (NP (DT _this) (NN _teacher)) (VP (AUX _was) (NOT _n't) (VP (VBG _rolling) (NP (DT _every) (NN _bicycle)))) (. _.)),good,causative,853,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-6.393835813701184,-6.665909593467955,TRUE
Name is n't opening this mouth .,Name is n't opening this mouth .,-33.71830790873913,-4.816901129819875,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.816901129819875,-4.759099071787018,FALSE
Name is n't falling this mouth .,Name is n't falling this mouth .,-33.313693502509125,-4.759099071787018,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-4.816901129819875,-4.759099071787018,FALSE
Name is n't opening this mouth .,Name is n't opening this mouth .,-34.36045382442609,-4.908636260632298,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.908636260632298,-4.966445332755155,TRUE
Name is n't falling this mouth .,Name is n't falling this mouth .,-34.765117329286085,-4.966445332755155,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-4.908636260632298,-4.966445332755155,TRUE
Name is n't opening this mouth .,Name is n't opening this mouth .,-34.19984735965381,-4.885692479950544,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.885692479950544,-4.827887103381973,FALSE
Name is n't falling this mouth .,Name is n't falling this mouth .,-33.79520972367381,-4.827887103381973,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-4.885692479950544,-4.827887103381973,FALSE
Name is n't opening this mouth .,Name is n't opening this mouth .,-34.22822354036909,-4.889746220052728,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.889746220052728,-4.889870281844156,TRUE
Name is n't falling this mouth .,Name is n't falling this mouth .,-34.229091972909096,-4.889870281844156,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-4.889746220052728,-4.889870281844156,TRUE
Name is n't opening this mouth .,Name is n't opening this mouth .,-34.59433084130399,-4.942047263043428,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.942047263043428,-4.712687511589143,FALSE
Name is n't falling this mouth .,Name is n't falling this mouth .,-32.988812581123995,-4.712687511589143,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-4.942047263043428,-4.712687511589143,FALSE
Name is n't opening this mouth .,Name is n't opening this mouth .,-33.99849783819537,-4.856928262599339,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.856928262599339,-4.78405434710791,FALSE
Name is n't falling this mouth .,Name is n't falling this mouth .,-33.48838042975537,-4.78405434710791,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-4.856928262599339,-4.78405434710791,FALSE
Name is n't opening this mouth .,Name is n't opening this mouth .,-33.80324357100583,-4.829034795857976,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.829034795857976,-4.730205911507976,FALSE
Name is n't falling this mouth .,Name is n't falling this mouth .,-33.11144138055583,-4.730205911507976,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-4.829034795857976,-4.730205911507976,FALSE
Name is n't opening this mouth .,Name is n't opening this mouth .,-34.47633324611118,-4.925190463730169,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.925190463730169,-4.982990631897311,TRUE
Name is n't falling this mouth .,Name is n't falling this mouth .,-34.88093442328118,-4.982990631897311,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-4.925190463730169,-4.982990631897311,TRUE
Name is n't opening this mouth .,Name is n't opening this mouth .,-33.81776162341905,-4.831108803345579,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.831108803345579,-4.872147392774151,TRUE
Name is n't falling this mouth .,Name is n't falling this mouth .,-34.105031749419055,-4.872147392774151,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-4.831108803345579,-4.872147392774151,TRUE
Name is n't opening this mouth .,Name is n't opening this mouth .,-33.51476600795333,-4.787823715421903,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _opening) (NP (DT _this) (NN _mouth)))) (. _.)),good,causative,903,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.787823715421903,-4.787823715421903,FALSE
Name is n't falling this mouth .,Name is n't falling this mouth .,-33.51476600795333,-4.787823715421903,(ROOT (NP _Name) (VP (AUX _is) (NOT _n't) (VP (VBG _falling) (NP (DT _this) (NN _mouth)))) (. _.)),bad,causative,903,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-4.787823715421903,-4.787823715421903,FALSE
Name had disappeared this carriage .,Name had disappeared this carriage .,-36.83398001006613,-6.138996668344355,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-6.008335863070062,-6.138996668344355,TRUE
Name had turned this carriage .,Name had turned this carriage .,-36.050015178420374,-6.008335863070062,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample1_PCFG.0.FG-output.rank-1,-6.008335863070062,-6.138996668344355,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-38.03872576726577,-6.339787627877628,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-6.189019738610767,-6.339787627877628,TRUE
Name had turned this carriage .,Name had turned this carriage .,-37.134118431664604,-6.189019738610767,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample10_PCFG.0.FG-output.rank-1,-6.189019738610767,-6.339787627877628,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-37.69973319932661,-6.283288866554435,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.096131107123024,-6.283288866554435,TRUE
Name had turned this carriage .,Name had turned this carriage .,-36.57678664273814,-6.096131107123024,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample2_PCFG.0.FG-output.rank-1,-6.096131107123024,-6.283288866554435,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-38.14284596575535,-6.357140994292558,(ROOT (NP _Name) (VP (AUX _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-6.209508871244441,-6.357140994292558,TRUE
Name had turned this carriage .,Name had turned this carriage .,-37.25705322746664,-6.209508871244441,(ROOT (NP _Name) (VP (AUX _had) (VP (VBN _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample3_PCFG.0.FG-output.rank-1,-6.209508871244441,-6.357140994292558,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-37.55909740226364,-6.25984956704394,(ROOT (NP _Name) (VP (AUX _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-6.030625274533253,-6.25984956704394,TRUE
Name had turned this carriage .,Name had turned this carriage .,-36.183751647199514,-6.030625274533253,(ROOT (NP _Name) (VP (AUX _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample4_PCFG.0.FG-output.rank-1,-6.030625274533253,-6.25984956704394,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-38.13155134758838,-6.355258557931396,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.122196809288503,-6.355258557931396,TRUE
Name had turned this carriage .,Name had turned this carriage .,-36.733180855731014,-6.122196809288503,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample5_PCFG.0.FG-output.rank-1,-6.122196809288503,-6.355258557931396,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-37.00916849157048,-6.16819474859508,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.051423064056752,-6.16819474859508,TRUE
Name had turned this carriage .,Name had turned this carriage .,-36.30853838434051,-6.051423064056752,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample6_PCFG.0.FG-output.rank-1,-6.051423064056752,-6.16819474859508,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-38.075121797557124,-6.345853632926187,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.1337281395773005,-6.345853632926187,TRUE
Name had turned this carriage .,Name had turned this carriage .,-36.8023688374638,-6.1337281395773005,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample7_PCFG.0.FG-output.rank-1,-6.1337281395773005,-6.345853632926187,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-37.954679954841126,-6.325779992473521,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-6.103335339313554,-6.325779992473521,TRUE
Name had turned this carriage .,Name had turned this carriage .,-36.620012035881324,-6.103335339313554,(ROOT (NP _Name) (VP (VBD _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample8_PCFG.0.FG-output.rank-1,-6.103335339313554,-6.325779992473521,TRUE
Name had disappeared this carriage .,Name had disappeared this carriage .,-37.21352009379293,-6.202253348965488,(ROOT (NP _Name) (VP (AUX _had) (VP (VBD _disappeared) (NP (DT _this) (NN _carriage)))) (. _.)),bad,causative,96,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-6.04087222419097,-6.202253348965488,TRUE
Name had turned this carriage .,Name had turned this carriage .,-36.24523334514582,-6.04087222419097,(ROOT (NP _Name) (VP (AUX _had) (VP (VBD _turned) (NP (DT _this) (NN _carriage)))) (. _.)),good,causative,96,syntax,argument_structure,sample9_PCFG.0.FG-output.rank-1,-6.04087222419097,-6.202253348965488,TRUE
